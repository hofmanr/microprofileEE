<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<server description="default server">
    <!-- Enable features -->
    <!--The Liberty Maven Plugin has generated Liberty features necessary for your application in configDropins/overrides/generated-features.xml-->
    <featureManager>
        <!-- MicroProfile features -->
<!--        <feature>microProfile-5.0</feature>-->
        <feature>jsonb-2.0</feature>
        <feature>mpConfig-3.0</feature>
        <feature>mpMetrics-4.0</feature>
        <feature>mpOpenAPI-3.0</feature>
        <feature>restfulWS-3.0</feature>

        <!-- Jakarta EE features -->
        <feature>beanValidation-3.0</feature>
        <feature>enterpriseBeansLite-4.0</feature>
        <feature>websocket-2.0</feature>
<!--        <feature>webProfile-9.1</feature>-->
<!--        <feature>jakartaee-9.1</feature>-->

        <!-- Admin console (/adminCenter) -->
<!--        <feature>adminCenter-1.0</feature>-->
    </featureManager>

    <basicRegistry id="basic">
        <user name="admin" password="adminpwd"/>
        <user name="reader" password="readerpwd"/>
    </basicRegistry>
    <administrator-role>
        <user>admin</user>
    </administrator-role>
    <reader-role>
        <user>reader</user>
    </reader-role>

    <!-- To protect keystore files that have server authentication credentials, define a keystore and assign it a password -->
    <keyStore id="defaultKeyStore" password="Liberty" />
    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint host="*" httpPort="9080" httpsPort="9443" id="defaultHttpEndpoint"/>

    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>

    <!-- Default SSL configuration enables trust for default certificates from the Java runtime -->
    <ssl id="defaultSSLConfig" trustDefaultCerts="true"/>
    <applicationMonitor updateTrigger="mbean" />
</server>